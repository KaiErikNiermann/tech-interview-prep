Search.setIndex({"docnames": ["MATERIALS", "_autosummary/sols", "_autosummary/sols.contains_duplicate", "_autosummary/sols.group_anagrams", "_autosummary/sols.prod_arr_except_self", "_autosummary/sols.top_k_frequent", "_autosummary/sols.two_sum", "_autosummary/sols.valid_anagram", "index"], "filenames": ["MATERIALS.md", "_autosummary/sols.rst", "_autosummary/sols.contains_duplicate.rst", "_autosummary/sols.group_anagrams.rst", "_autosummary/sols.prod_arr_except_self.rst", "_autosummary/sols.top_k_frequent.rst", "_autosummary/sols.two_sum.rst", "_autosummary/sols.valid_anagram.rst", "index.rst"], "titles": ["Collected materials", "sols", "sols.contains_duplicate", "sols.group_anagrams", "sols.prod_arr_except_self", "sols.top_k_frequent", "sols.two_sum", "sols.valid_anagram", "Technical interview prep materials"], "terms": {"If": [0, 2], "you": [0, 5], "know": 0, "ani": 0, "other": [0, 3], "good": 0, "book": 0, "add": 0, "email": 0, "them": [0, 3, 7], "misc": 0, "reciev": 0, "proton": 0, "me": 0, "main": 0, "websit": 0, "us": [0, 3, 5, 7], "compani": 0, "practic": [0, 5], "hackerrank": 0, "interview": [0, 5], "kit": 0, "should": [0, 3], "especi": 0, "want": 0, "do": 0, "some": 0, "short": 0, "term": 0, "leetcod": 0, "blind": 0, "75": 0, "seem": 0, "common": 0, "track": 0, "problem": [0, 3], "peopl": 0, "follow": 0, "neetcod": 0, "gener": 0, "ha": [0, 2, 3], "codesign": 0, "also": 0, "thi": [0, 3, 5], "nice": 0, "simpl": 0, "ui": 0, "stuff": 0, "hack": 0, "box": 0, "jake": 0, "i": [0, 2, 3, 5, 6], "basic": [0, 3], "unbeat": 0, "qualiti": 0, "popul": 0, "right": 0, "keyword": 0, "get": 0, "past": 0, "most": [0, 3], "screen": 0, "without": 0, "mani": 0, "modul": [1, 7], "class": [2, 3, 4, 5, 6, 7], "solut": [2, 3, 4, 5, 6, 7], "sourc": [2, 3, 4, 5, 6, 7], "containsdupl": 2, "num": [2, 4, 5, 6], "list": [2, 3, 4, 5, 6], "int": [2, 4, 5, 6], "bool": [2, 7], "creat": [2, 3, 6, 7], "set": 2, "store": [2, 3, 5, 6, 7], "uniqu": 2, "number": [2, 3, 5], "python": [2, 3], "o": [2, 3, 5, 6, 7], "1": [2, 3, 7], "lookup": 2, "alreadi": 2, "return": [2, 5, 7], "true": 2, "time": [2, 3, 5, 6, 7], "complex": [2, 3, 5, 6, 7], "n": [2, 3, 5, 6, 7], "space": [2, 3, 5, 6, 7], "groupanagram": 3, "str": [3, 7], "re": 3, "word": [3, 7], "frequenc": [3, 5, 7], "defaultdict": 3, "dict": 3, "init": 3, "avoid": 3, "edg": 3, "case": 3, "kei": 3, "we": [3, 5, 6, 7], "iter": [3, 6], "through": [3, 6], "count": 3, "each": [3, 5, 7], "charact": [3, 7], "convert": 3, "tupl": 3, "make": 3, "hashabl": 3, "potenti": 3, "unecessari": 3, "lang": 3, "ord": 3, "c": 3, "map": 3, "ascii": 3, "valu": [3, 5, 6], "between": 3, "0": 3, "25": 3, "give": 3, "u": 3, "index": [3, 5, 6, 8], "increment": 3, "m": 3, "where": [3, 5], "averag": 3, "length": [3, 7], "interestingli": 3, "enough": 3, "algorithm": 3, "actual": 3, "run": 3, "slower": 3, "than": 3, "sort": [3, 5, 7], "sure": 3, "why": 3, "timsort": 3, "which": 3, "best": 3, "tc": 3, "omega": 3, "worst": 3, "log": [3, 5], "so": 3, "theori": 3, "same": 3, "speed": 3, "appar": 3, "could": [3, 5], "ar": [3, 5, 7], "optim": 3, "awar": 3, "groupanagramssort": 3, "similarli": 3, "anagram": 3, "can": [3, 5, 6, 7], "group": 3, "togeth": 3, "dictionari": [3, 5, 6, 7], "productexceptself": 4, "topkfrequ": 5, "k": 5, "place": 5, "element": [5, 6], "bucket": 5, "n1": 5, "n2": 5, "have": [5, 7], "last": 5, "2n": 5, "topkfrequentcompact": 5, "feel": 5, "like": 5, "an": [5, 6], "speak": 5, "its": 5, "close": 5, "would": 5, "probabl": 5, "expand": 5, "though": 5, "either": 5, "kind": 5, "just": 5, "explain": 5, "twosum": 6, "target": 6, "recogn": 6, "properti": 6, "b": 6, "idx": 6, "sinc": 6, "now": 6, "onli": 6, "need": 6, "current": 6, "simpli": 6, "comput": 6, "differ": [6, 7], "see": [6, 7], "isanagram": 7, "": 7, "t": 7, "trivial": 7, "fals": 7, "two": 7, "compar": 7, "thei": 7, "equal": 7, "isanagramsort": 7, "2": 7, "logn": 7, "isanagramcount": 7, "A": 7, "bit": 7, "cheat": 7, "counter": 7, "from": 7, "collect": [7, 8], "textbook": 8, "code": 8, "resum": 8, "templat": 8, "search": 8, "page": 8}, "objects": {"": [[1, 0, 0, "-", "sols"]], "sols": [[2, 0, 0, "-", "contains_duplicate"], [3, 0, 0, "-", "group_anagrams"], [4, 0, 0, "-", "prod_arr_except_self"], [5, 0, 0, "-", "top_k_frequent"], [6, 0, 0, "-", "two_sum"], [7, 0, 0, "-", "valid_anagram"]], "sols.contains_duplicate": [[2, 1, 1, "", "Solution"]], "sols.contains_duplicate.Solution": [[2, 2, 1, "", "containsDuplicate"]], "sols.group_anagrams": [[3, 1, 1, "", "Solution"]], "sols.group_anagrams.Solution": [[3, 2, 1, "", "groupAnagrams"], [3, 2, 1, "", "groupAnagramsSorting"]], "sols.prod_arr_except_self": [[4, 1, 1, "", "Solution"]], "sols.prod_arr_except_self.Solution": [[4, 2, 1, "", "productExceptSelf"]], "sols.top_k_frequent": [[5, 1, 1, "", "Solution"]], "sols.top_k_frequent.Solution": [[5, 2, 1, "", "topKFrequent"], [5, 2, 1, "", "topKFrequentCompact"]], "sols.two_sum": [[6, 1, 1, "", "Solution"]], "sols.two_sum.Solution": [[6, 2, 1, "", "twoSum"]], "sols.valid_anagram": [[7, 1, 1, "", "Solution"]], "sols.valid_anagram.Solution": [[7, 2, 1, "", "isAnagram"], [7, 2, 1, "", "isAnagramCounter"], [7, 2, 1, "", "isAnagramSort"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"collect": 0, "materi": [0, 8], "textbook": 0, "code": 0, "prep": [0, 8], "softwar": 0, "engin": 0, "sec": 0, "resum": 0, "templat": 0, "sol": [1, 2, 3, 4, 5, 6, 7], "contains_dupl": 2, "thought": [2, 3, 5, 6, 7], "process": [2, 3, 5, 6, 7], "note": [2, 3, 5, 6, 7], "group_anagram": 3, "prod_arr_except_self": 4, "top_k_frequ": 5, "two_sum": 6, "valid_anagram": 7, "technic": 8, "interview": 8, "content": 8, "indic": 8, "tabl": 8, "modul": 8}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Collected materials": [[0, "collected-materials"]], "textbooks": [[0, "textbooks"]], "coding-prep": [[0, "coding-prep"]], "software-engineering": [[0, "software-engineering"]], "sec": [[0, "sec"]], "resume template": [[0, "resume-template"]], "sols": [[1, "module-sols"]], "sols.contains_duplicate": [[2, "module-sols.contains_duplicate"]], "Thought process": [[2, "thought-process"], [3, "thought-process"], [3, "id1"], [5, "thought-process"], [5, "id1"], [6, "thought-process"], [7, "thought-process"], [7, "id1"]], "Notes": [[2, "notes"], [3, "notes"], [3, "id2"], [5, "notes"], [5, "id2"], [6, "notes"], [7, "notes"], [7, "id2"]], "sols.group_anagrams": [[3, "module-sols.group_anagrams"]], "sols.prod_arr_except_self": [[4, "module-sols.prod_arr_except_self"]], "sols.top_k_frequent": [[5, "module-sols.top_k_frequent"]], "sols.two_sum": [[6, "module-sols.two_sum"]], "sols.valid_anagram": [[7, "module-sols.valid_anagram"]], "Technical interview prep materials": [[8, "technical-interview-prep-materials"]], "Contents:": [[8, "contents"], [8, null]], "Indices and tables": [[8, "indices-and-tables"]], "Modules": [[8, "modules"]]}, "indexentries": {"module": [[1, "module-sols"], [2, "module-sols.contains_duplicate"], [3, "module-sols.group_anagrams"], [4, "module-sols.prod_arr_except_self"], [5, "module-sols.top_k_frequent"], [6, "module-sols.two_sum"], [7, "module-sols.valid_anagram"]], "sols": [[1, "module-sols"]], "solution (class in sols.contains_duplicate)": [[2, "sols.contains_duplicate.Solution"]], "containsduplicate() (sols.contains_duplicate.solution method)": [[2, "sols.contains_duplicate.Solution.containsDuplicate"]], "sols.contains_duplicate": [[2, "module-sols.contains_duplicate"]], "solution (class in sols.group_anagrams)": [[3, "sols.group_anagrams.Solution"]], "groupanagrams() (sols.group_anagrams.solution method)": [[3, "sols.group_anagrams.Solution.groupAnagrams"]], "groupanagramssorting() (sols.group_anagrams.solution method)": [[3, "sols.group_anagrams.Solution.groupAnagramsSorting"]], "sols.group_anagrams": [[3, "module-sols.group_anagrams"]], "solution (class in sols.prod_arr_except_self)": [[4, "sols.prod_arr_except_self.Solution"]], "productexceptself() (sols.prod_arr_except_self.solution method)": [[4, "sols.prod_arr_except_self.Solution.productExceptSelf"]], "sols.prod_arr_except_self": [[4, "module-sols.prod_arr_except_self"]], "solution (class in sols.top_k_frequent)": [[5, "sols.top_k_frequent.Solution"]], "sols.top_k_frequent": [[5, "module-sols.top_k_frequent"]], "topkfrequent() (sols.top_k_frequent.solution method)": [[5, "sols.top_k_frequent.Solution.topKFrequent"]], "topkfrequentcompact() (sols.top_k_frequent.solution method)": [[5, "sols.top_k_frequent.Solution.topKFrequentCompact"]], "solution (class in sols.two_sum)": [[6, "sols.two_sum.Solution"]], "sols.two_sum": [[6, "module-sols.two_sum"]], "twosum() (sols.two_sum.solution method)": [[6, "sols.two_sum.Solution.twoSum"]], "solution (class in sols.valid_anagram)": [[7, "sols.valid_anagram.Solution"]], "isanagram() (sols.valid_anagram.solution method)": [[7, "sols.valid_anagram.Solution.isAnagram"]], "isanagramcounter() (sols.valid_anagram.solution method)": [[7, "sols.valid_anagram.Solution.isAnagramCounter"]], "isanagramsort() (sols.valid_anagram.solution method)": [[7, "sols.valid_anagram.Solution.isAnagramSort"]], "sols.valid_anagram": [[7, "module-sols.valid_anagram"]]}})