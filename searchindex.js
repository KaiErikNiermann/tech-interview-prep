Search.setIndex({"docnames": ["MATERIALS", "_autosummary/src", "_autosummary/src.best_buysell_stock", "_autosummary/src.contains_duplicate", "_autosummary/src.group_anagrams", "_autosummary/src.longest_cons_seq", "_autosummary/src.longest_rep_char_replacement", "_autosummary/src.longest_subs_no_repeat", "_autosummary/src.min_rot_sort_array", "_autosummary/src.minimum_window_substring", "_autosummary/src.most_water_container", "_autosummary/src.prod_arr_except_self", "_autosummary/src.search_rot_sort_array", "_autosummary/src.three_sum", "_autosummary/src.top_k_frequent", "_autosummary/src.two_sum", "_autosummary/src.valid_anagram", "_autosummary/src.valid_palindrome", "_autosummary/src.valid_parenthesis", "index"], "filenames": ["MATERIALS.md", "_autosummary/src.rst", "_autosummary/src.best_buysell_stock.rst", "_autosummary/src.contains_duplicate.rst", "_autosummary/src.group_anagrams.rst", "_autosummary/src.longest_cons_seq.rst", "_autosummary/src.longest_rep_char_replacement.rst", "_autosummary/src.longest_subs_no_repeat.rst", "_autosummary/src.min_rot_sort_array.rst", "_autosummary/src.minimum_window_substring.rst", "_autosummary/src.most_water_container.rst", "_autosummary/src.prod_arr_except_self.rst", "_autosummary/src.search_rot_sort_array.rst", "_autosummary/src.three_sum.rst", "_autosummary/src.top_k_frequent.rst", "_autosummary/src.two_sum.rst", "_autosummary/src.valid_anagram.rst", "_autosummary/src.valid_palindrome.rst", "_autosummary/src.valid_parenthesis.rst", "index.rst"], "titles": ["collected materials", "src", "src.best_buysell_stock", "src.contains_duplicate", "src.group_anagrams", "src.longest_cons_seq", "src.longest_rep_char_replacement", "src.longest_subs_no_repeat", "src.min_rot_sort_array", "src.minimum_window_substring", "src.most_water_container", "src.prod_arr_except_self", "src.search_rot_sort_array", "src.three_sum", "src.top_k_frequent", "src.two_sum", "src.valid_anagram", "src.valid_palindrome", "src.valid_parenthesis", "Technical Interview Prep Materials"], "terms": {"page": [0, 19], "includ": [0, 19], "inform": 0, "type": [0, 6], "internship": 0, "you": [0, 14, 19], "ar": [0, 7, 9, 14, 16, 17], "like": [0, 14], "encount": 0, "some": [0, 4, 9], "strategi": 0, "recommend": 0, "specif": [0, 9], "checkout": 0, "thi": [0, 2, 4, 8, 10, 12, 14, 17, 18, 19], "book": 0, "If": [0, 3, 4, 5, 7, 13, 17], "know": [0, 4, 7, 8], "ani": [0, 19], "other": [0, 2, 4, 6], "good": [0, 8, 17, 18], "add": 0, "email": 0, "them": [0, 4, 16], "misc": 0, "reciev": 0, "proton": 0, "me": [0, 19], "mailto": 0, "main": [0, 2, 9], "websit": 0, "us": [0, 4, 5, 8, 9, 14, 16, 17, 18], "compani": 0, "practic": [0, 4, 14], "leetcod": [0, 19], "blind": 0, "75": 0, "seem": [0, 4], "common": [0, 17, 19], "track": [0, 5, 6, 9], "problem": [0, 4, 6, 8, 9, 19], "peopl": 0, "follow": 0, "neetcod": [0, 19], "ha": [0, 3, 5, 17], "hackerrank": 0, "interview": [0, 8, 14, 17], "kit": 0, "should": 0, "especi": 0, "want": [0, 8, 17], "do": [0, 4, 6, 10, 11, 19], "short": [0, 4], "term": 0, "codesign": 0, "also": [0, 17], "nice": 0, "simpl": [0, 6], "ui": 0, "stuff": 0, "though": [0, 4, 14], "i": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19], "less": 0, "than": [0, 4, 8], "two": [0, 6, 7, 8, 10, 11, 12, 13, 16, 17], "avent": 0, "everi": 0, "year": 0, "dure": [0, 9], "decemb": 0, "aoc": 0, "host": 0, "number": [0, 3, 4, 6, 14], "challeng": 0, "each": [0, 4, 14, 16], "dai": 0, "vari": 0, "difficulti": 0, "often": 0, "start": [0, 5, 7, 9, 17], "off": 0, "easi": 0, "vuc": 0, "usual": [0, 9], "small": [0, 13], "discuss": 0, "thread": 0, "can": [0, 4, 6, 9, 10, 13, 14, 15, 16, 17, 18], "join": 0, "an": [0, 9, 11, 14, 15, 17, 19], "offici": 0, "leaderboard": 0, "part": 0, "storm": 0, "cloudflight": 0, "contest": 0, "studsec": 0, "student": [0, 19], "vu": 0, "its": [0, 4, 8, 14], "wai": [0, 6, 17, 18], "sec": 0, "relat": 0, "while": [0, 9, 10, 13], "bond": 0, "hack": 0, "box": 0, "jake": 0, "basic": [0, 4, 5, 6, 7, 10, 13], "unbeat": 0, "qualiti": 0, "popul": 0, "right": [0, 5, 7, 8, 13], "keyword": 0, "get": 0, "past": [0, 4], "most": [0, 6], "screen": 0, "without": [0, 18], "mani": 0, "2024": 0, "c": [0, 4, 9, 11], "ai": 0, "believ": 0, "held": 0, "yearli": 0, "might": 0, "wrong": 0, "definit": 0, "happen": 0, "worth": 0, "sign": 0, "up": [0, 4], "enabl": 0, "certain": 0, "process": 0, "go": 0, "more": [0, 17], "smoothli": 0, "network": 0, "littl": 0, "sure": [0, 4, 19], "here": [0, 6, 7, 8, 12, 17], "": [0, 6, 7, 9, 16, 17, 18], "tabl": 0, "all": [0, 2, 6, 10, 11, 12, 18], "provid": 0, "bottom": 0, "categori": 0, "resourc": 0, "advent": 0, "clear": 0, "overview": 0, "correspond": [0, 18], "modul": [1, 16], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "solut": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "maxprofit": 2, "price": 2, "list": [2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15], "int": [2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], "The": [2, 6, 8, 10, 11, 12], "idea": [2, 5, 6, 13], "just": [2, 5, 6, 8, 10, 11, 13, 14, 17], "find": [2, 5, 6], "maximum": [2, 10], "profit": 2, "we": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "store": [2, 3, 4, 9, 14, 15, 16], "lowest": 2, "compar": [2, 9, 16, 17], "valu": [2, 4, 13, 14, 15], "time": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "complex": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "o": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "n": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "space": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "1": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 16, 17], "containsdupl": 3, "num": [3, 5, 8, 11, 12, 13, 14, 15], "bool": [3, 16, 17, 18], "creat": [3, 4, 15, 16], "set": [3, 5], "uniqu": 3, "python": [3, 4, 17], "lookup": [3, 5], "alreadi": 3, "return": [3, 8, 10, 14, 16, 17], "true": [3, 17], "groupanagram": 4, "str": [4, 6, 7, 9, 16, 17, 18], "re": 4, "word": [4, 16], "frequenc": [4, 6, 9, 14, 16], "defaultdict": 4, "dict": 4, "init": [4, 8, 13], "avoid": [4, 13, 17], "edg": 4, "case": [4, 8, 13], "kei": [4, 7, 8, 9, 12], "iter": [4, 8, 9, 15, 17], "through": [4, 6, 9, 15, 17], "count": [4, 9], "charact": [4, 6, 7, 16, 17], "convert": 4, "tupl": 4, "make": [4, 19], "hashabl": 4, "potenti": 4, "unecessari": 4, "lang": 4, "ord": 4, "map": [4, 6, 7, 9, 18], "ascii": 4, "between": 4, "0": [4, 8, 10, 13], "25": 4, "give": [4, 11], "u": [4, 11], "index": [4, 8, 12, 14, 15, 19], "increment": [4, 5, 6, 9], "m": [4, 12], "where": [4, 9, 14, 17], "averag": 4, "length": [4, 5, 6, 10, 16], "interestingli": 4, "enough": 4, "actual": 4, "appear": 4, "slower": 4, "sort": [4, 13, 14, 16], "honestli": 4, "im": 4, "too": [4, 13, 17], "why": [4, 19], "One": 4, "reason": 4, "friend": 4, "mine": 4, "come": 4, "reduc": 4, "log": [4, 8, 12, 13, 14, 16], "test": 4, "even": 4, "consider": 4, "larg": [4, 13], "faster": 4, "addition": 4, "hold": [4, 12], "languag": [4, 17], "For": [4, 19], "algorithm": 4, "3": [4, 9, 13], "11": 4, "nearli": 4, "optim": 4, "mergesort": 4, "anyon": 4, "seemingli": 4, "tell": 4, "groupanagramssort": 4, "similarli": 4, "anagram": 4, "group": 4, "togeth": 4, "dictionari": [4, 14, 15, 16, 18], "groupanagramsfast": 4, "cach": 4, "creation": 4, "function": [4, 17], "recomput": 4, "rest": [4, 6], "code": [4, 19], "same": [4, 12, 17], "befor": 4, "longestconsecut": 5, "neighbor": 5, "logic": 5, "left": [5, 7, 8], "sequenc": 5, "otherwis": 5, "keep": [5, 6, 9], "found": [5, 9], "till": 5, "longest": 5, "max": 5, "recogn": [5, 15], "end": [5, 9, 17], "characterreplac": 6, "k": [6, 14], "again": [6, 10, 12], "silid": 6, "window": [6, 7, 9], "our": [6, 7, 13], "target": [6, 12, 15], "substr": [6, 7, 9], "consist": 6, "compon": 6, "frequent": 6, "which": 6, "flip": 6, "so": [6, 9, 10, 13], "now": [6, 15], "trick": 6, "break": 6, "letter": [6, 7, 9], "belong": 6, "subword": 6, "doe": [6, 10, 12], "clearli": 6, "delini": 6, "separ": 6, "easili": 6, "violat": [6, 7], "defin": [6, 9], "l": [6, 7, 9, 10, 12, 13], "pointer": [6, 7, 9, 10, 12, 13, 17], "point": [6, 8, 10, 12], "sens": 6, "counter": [6, 16], "everytim": 6, "have": [6, 9, 10, 14, 16, 17, 18], "condit": [6, 7, 9, 12, 18], "r": [6, 7, 9, 10, 12, 13], "maxf": 6, "decrement": 6, "sai": 6, "exce": 6, "lengthoflongestsubstr": 7, "slide": [7, 9], "concept": 7, "move": [7, 9, 10, 13, 17], "notic": 7, "repeat": [7, 10], "until": [7, 10], "longer": 7, "stationari": 7, "mark": 7, "grow": 7, "from": [7, 16], "side": 7, "thing": [7, 8, 9, 12, 17], "approach": [7, 8, 9, 17], "across": 7, "arrai": [7, 8, 11, 13, 17], "becaus": 7, "sub": [7, 9], "hashset": 7, "findmin": 8, "insight": 8, "minimum": 8, "element": [8, 14, 15], "onli": [8, 10, 15], "smaller": [8, 10], "previou": 8, "sinc": [8, 10, 13, 15], "solv": 8, "first": [8, 11], "intuit": 8, "alwai": [8, 19], "divid": 8, "conquer": 8, "instanc": 8, "take": [8, 13], "form": 8, "binari": [8, 12], "search": [8, 12, 19], "rememb": [8, 12, 17], "len": [8, 10], "mid": 8, "calcul": [8, 11], "2": [8, 10, 12, 13, 16], "findminrecurs": 8, "similar": 8, "recurs": 8, "base": [8, 10], "when": 8, "probabl": [8, 14], "wors": 8, "due": 8, "stack": [8, 18], "minwindow": 9, "t": [9, 16], "observ": 9, "achiev": 9, "being": [9, 13], "contain": 9, "within": 9, "singl": [9, 10], "variabl": 9, "need": [9, 15], "both": 9, "numer": 9, "repres": 9, "size": 9, "indic": 9, "abstractli": 9, "gener": [9, 17, 19], "loop": [9, 10, 13], "normal": 9, "consid": [9, 13], "rightarrow": 9, "expand": [9, 14], "check": [9, 10, 13, 17], "new": 9, "smallest": 9, "maxarea": 10, "height": 10, "onc": 10, "setup": [10, 13], "area": 10, "wall": 10, "text": 10, "min": 10, "h": 10, "larger": 10, "decreas": [10, 13], "cross": [10, 13], "over": [10, 13], "maxareabruteforc": 10, "brute": 10, "forc": 10, "possibl": 10, "combin": 10, "pass": [10, 11, 18], "limit": 10, "productexceptself": 11, "pre": 11, "post": 11, "product": 11, "given": 11, "b": [11, 15], "d": 11, "comput": [11, 15], "ab": 11, "abc": 11, "second": 11, "bcd": 11, "cd": 11, "result": [11, 13], "answer": 11, "Its": 11, "cumul": 11, "forward": 11, "backward": 11, "modifi": 12, "modif": 12, "ensur": 12, "requir": 12, "interv": 12, "split": 12, "continu": 12, "determin": 12, "midpoint": 12, "differ": [12, 15, 16], "oper": 12, "regular": 12, "simpli": [12, 15], "adjust": 12, "correct": 12, "posit": [12, 13], "segment": 12, "leftmost": 12, "rightmost": 12, "threesum": 13, "broad": 13, "closer": 13, "sum": 13, "increas": 13, "skip": 13, "integ": 13, "imposs": 13, "e": 13, "g": 13, "duplic": 13, "thei": [13, 16], "havent": 13, "append": 13, "depend": 13, "implement": 13, "topkfrequ": 14, "place": 14, "bucket": 14, "n1": 14, "n2": 14, "last": 14, "2n": 14, "topkfrequentcompact": 14, "feel": [14, 19], "could": 14, "speak": 14, "close": [14, 18], "would": 14, "either": 14, "kind": 14, "explain": 14, "twosum": 15, "properti": 15, "idx": 15, "current": 15, "see": [15, 16], "isanagram": 16, "trivial": 16, "fals": [16, 17, 18], "equal": 16, "isanagramsort": 16, "isanagramcount": 16, "A": 16, "bit": 16, "cheat": 16, "collect": [16, 19], "ispalindrom": 17, "Not": 17, "much": 17, "think": [17, 18], "about": [17, 18], "remmber": 17, "built": 17, "lib": 17, "alot": 17, "member": 17, "string": 17, "slice": 17, "notat": 17, "stop": 17, "step": 17, "revers": 17, "ask": 17, "oa": 17, "constraint": 17, "fine": 17, "ispalindromecompact": 17, "rejex": 17, "along": 17, "lower": 17, "za": 17, "z0": 17, "9": 17, "remov": 17, "everyth": 17, "non": 17, "alphanumer": 17, "comparison": 17, "ispalindromefunct": 17, "essenti": 17, "origin": 17, "filter": 17, "out": [17, 19], "Then": 17, "ispalindrometwopoint": 17, "extra": 17, "lambda": 17, "reach": [17, 19], "isvalid": 18, "open": 18, "bracket": 18, "empti": 18, "signifi": 18, "been": 18, "As": 19, "am": 19, "mistak": 19, "try": 19, "pleas": 19, "spot": 19, "free": 19, "rais": 19, "issu": 19, "discord": 19, "appulsauc": 19, "fix": 19, "asap": 19, "guid": 19, "applic": 19, "info": 19, "textbook": 19, "career": 19, "link": 19, "summari": 19, "work": 19, "refer": 19, "src": 19, "dooc": 19, "gh": 19}, "objects": {"": [[1, 0, 0, "-", "src"]], "src": [[2, 0, 0, "-", "best_buysell_stock"], [3, 0, 0, "-", "contains_duplicate"], [4, 0, 0, "-", "group_anagrams"], [5, 0, 0, "-", "longest_cons_seq"], [6, 0, 0, "-", "longest_rep_char_replacement"], [7, 0, 0, "-", "longest_subs_no_repeat"], [8, 0, 0, "-", "min_rot_sort_array"], [9, 0, 0, "-", "minimum_window_substring"], [10, 0, 0, "-", "most_water_container"], [11, 0, 0, "-", "prod_arr_except_self"], [12, 0, 0, "-", "search_rot_sort_array"], [13, 0, 0, "-", "three_sum"], [14, 0, 0, "-", "top_k_frequent"], [15, 0, 0, "-", "two_sum"], [16, 0, 0, "-", "valid_anagram"], [17, 0, 0, "-", "valid_palindrome"], [18, 0, 0, "-", "valid_parenthesis"]], "src.best_buysell_stock": [[2, 1, 1, "", "Solution"]], "src.best_buysell_stock.Solution": [[2, 2, 1, "", "maxProfit"]], "src.contains_duplicate": [[3, 1, 1, "", "Solution"]], "src.contains_duplicate.Solution": [[3, 2, 1, "", "containsDuplicate"]], "src.group_anagrams": [[4, 1, 1, "", "Solution"]], "src.group_anagrams.Solution": [[4, 2, 1, "", "groupAnagrams"], [4, 2, 1, "", "groupAnagramsFast"], [4, 2, 1, "", "groupAnagramsSorting"]], "src.longest_cons_seq": [[5, 1, 1, "", "Solution"]], "src.longest_cons_seq.Solution": [[5, 2, 1, "", "longestConsecutive"]], "src.longest_rep_char_replacement": [[6, 1, 1, "", "Solution"]], "src.longest_rep_char_replacement.Solution": [[6, 2, 1, "", "characterReplacement"]], "src.longest_subs_no_repeat": [[7, 1, 1, "", "Solution"]], "src.longest_subs_no_repeat.Solution": [[7, 2, 1, "", "lengthOfLongestSubstring"]], "src.min_rot_sort_array": [[8, 1, 1, "", "Solution"]], "src.min_rot_sort_array.Solution": [[8, 2, 1, "", "findMin"], [8, 2, 1, "", "findMinRecursive"]], "src.minimum_window_substring": [[9, 1, 1, "", "Solution"]], "src.minimum_window_substring.Solution": [[9, 2, 1, "", "minWindow"]], "src.most_water_container": [[10, 1, 1, "", "Solution"]], "src.most_water_container.Solution": [[10, 2, 1, "", "maxArea"], [10, 2, 1, "", "maxAreaBruteForce"]], "src.prod_arr_except_self": [[11, 1, 1, "", "Solution"]], "src.prod_arr_except_self.Solution": [[11, 2, 1, "", "productExceptSelf"]], "src.search_rot_sort_array": [[12, 1, 1, "", "Solution"]], "src.search_rot_sort_array.Solution": [[12, 2, 1, "", "search"]], "src.three_sum": [[13, 1, 1, "", "Solution"]], "src.three_sum.Solution": [[13, 2, 1, "", "threeSum"]], "src.top_k_frequent": [[14, 1, 1, "", "Solution"]], "src.top_k_frequent.Solution": [[14, 2, 1, "", "topKFrequent"], [14, 2, 1, "", "topKFrequentCompact"]], "src.two_sum": [[15, 1, 1, "", "Solution"]], "src.two_sum.Solution": [[15, 2, 1, "", "twoSum"]], "src.valid_anagram": [[16, 1, 1, "", "Solution"]], "src.valid_anagram.Solution": [[16, 2, 1, "", "isAnagram"], [16, 2, 1, "", "isAnagramCounter"], [16, 2, 1, "", "isAnagramSort"]], "src.valid_palindrome": [[17, 1, 1, "", "Solution"]], "src.valid_palindrome.Solution": [[17, 2, 1, "", "isPalindrome"], [17, 2, 1, "", "isPalindromeCompact"], [17, 2, 1, "", "isPalindromeFunctional"], [17, 2, 1, "", "isPalindromeTwoPoint"]], "src.valid_parenthesis": [[18, 1, 1, "", "Solution"]], "src.valid_parenthesis.Solution": [[18, 2, 1, "", "isValid"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"collect": 0, "materi": [0, 19], "gener": 0, "guid": 0, "applic": 0, "info": 0, "textbook": 0, "code": 0, "prep": [0, 19], "softwar": 0, "engin": 0, "competit": 0, "secur": 0, "career": 0, "resum": 0, "templat": 0, "fair": 0, "link": 0, "summari": 0, "src": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "best_buysell_stock": 2, "thought": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "process": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "note": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "contains_dupl": 3, "group_anagram": 4, "longest_cons_seq": 5, "longest_rep_char_replac": 6, "longest_subs_no_repeat": 7, "min_rot_sort_arrai": 8, "minimum_window_substr": 9, "most_water_contain": 10, "prod_arr_except_self": 11, "search_rot_sort_arrai": 12, "three_sum": 13, "top_k_frequ": 14, "two_sum": 15, "valid_anagram": 16, "valid_palindrom": 17, "valid_parenthesi": 18, "technic": 19, "interview": 19, "indic": 19, "tabl": 19, "content": 19, "modul": 19, "addit": 19, "resourc": 19}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"collected materials": [[0, "collected-materials"]], "general guide and application info": [[0, "general-guide-and-application-info"]], "textbooks": [[0, "textbooks"]], "coding-prep": [[0, "coding-prep"]], "software-engineering": [[0, "software-engineering"]], "competitions": [[0, "competitions"]], "security": [[0, "security"]], "career prep": [[0, "career-prep"]], "resume template": [[0, "resume-template"]], "career fairs": [[0, "career-fairs"]], "link summary": [[0, "link-summary"]], "src": [[1, "module-src"]], "src.best_buysell_stock": [[2, "module-src.best_buysell_stock"]], "Thought process": [[2, "thought-process"], [3, "thought-process"], [4, "thought-process"], [4, "id1"], [4, "id3"], [5, "thought-process"], [6, "thought-process"], [7, "thought-process"], [8, "thought-process"], [8, "id1"], [9, "thought-process"], [10, "thought-process"], [10, "id1"], [11, "thought-process"], [12, "thought-process"], [13, "thought-process"], [14, "thought-process"], [14, "id1"], [15, "thought-process"], [16, "thought-process"], [16, "id1"], [17, "thought-process"], [17, "id1"], [17, "id2"], [17, "id3"], [18, "thought-process"]], "Notes": [[2, "notes"], [3, "notes"], [4, "notes"], [4, "id2"], [5, "notes"], [6, "notes"], [7, "notes"], [8, "notes"], [8, "id2"], [9, "notes"], [10, "notes"], [10, "id2"], [11, "notes"], [12, "notes"], [13, "notes"], [14, "notes"], [14, "id2"], [15, "notes"], [16, "notes"], [16, "id2"], [17, "notes"], [17, "id4"], [18, "notes"]], "src.contains_duplicate": [[3, "module-src.contains_duplicate"]], "src.group_anagrams": [[4, "module-src.group_anagrams"]], "src.longest_cons_seq": [[5, "module-src.longest_cons_seq"]], "src.longest_rep_char_replacement": [[6, "module-src.longest_rep_char_replacement"]], "src.longest_subs_no_repeat": [[7, "module-src.longest_subs_no_repeat"]], "src.min_rot_sort_array": [[8, "module-src.min_rot_sort_array"]], "src.minimum_window_substring": [[9, "module-src.minimum_window_substring"]], "src.most_water_container": [[10, "module-src.most_water_container"]], "src.prod_arr_except_self": [[11, "module-src.prod_arr_except_self"]], "src.search_rot_sort_array": [[12, "module-src.search_rot_sort_array"]], "src.three_sum": [[13, "module-src.three_sum"]], "src.top_k_frequent": [[14, "module-src.top_k_frequent"]], "src.two_sum": [[15, "module-src.two_sum"]], "src.valid_anagram": [[16, "module-src.valid_anagram"]], "src.valid_palindrome": [[17, "module-src.valid_palindrome"]], "src.valid_parenthesis": [[18, "module-src.valid_parenthesis"]], "Technical Interview Prep Materials": [[19, "technical-interview-prep-materials"]], "Indices and Tables": [[19, "indices-and-tables"]], "Table of Contents": [[19, null]], "Modules": [[19, "modules"]], "Additional Resources": [[19, "additional-resources"]]}, "indexentries": {"module": [[1, "module-src"], [2, "module-src.best_buysell_stock"], [3, "module-src.contains_duplicate"], [4, "module-src.group_anagrams"], [5, "module-src.longest_cons_seq"], [6, "module-src.longest_rep_char_replacement"], [7, "module-src.longest_subs_no_repeat"], [8, "module-src.min_rot_sort_array"], [9, "module-src.minimum_window_substring"], [10, "module-src.most_water_container"], [11, "module-src.prod_arr_except_self"], [12, "module-src.search_rot_sort_array"], [13, "module-src.three_sum"], [14, "module-src.top_k_frequent"], [15, "module-src.two_sum"], [16, "module-src.valid_anagram"], [17, "module-src.valid_palindrome"], [18, "module-src.valid_parenthesis"]], "src": [[1, "module-src"]], "solution (class in src.best_buysell_stock)": [[2, "src.best_buysell_stock.Solution"]], "maxprofit() (src.best_buysell_stock.solution method)": [[2, "src.best_buysell_stock.Solution.maxProfit"]], "src.best_buysell_stock": [[2, "module-src.best_buysell_stock"]], "solution (class in src.contains_duplicate)": [[3, "src.contains_duplicate.Solution"]], "containsduplicate() (src.contains_duplicate.solution method)": [[3, "src.contains_duplicate.Solution.containsDuplicate"]], "src.contains_duplicate": [[3, "module-src.contains_duplicate"]], "solution (class in src.group_anagrams)": [[4, "src.group_anagrams.Solution"]], "groupanagrams() (src.group_anagrams.solution method)": [[4, "src.group_anagrams.Solution.groupAnagrams"]], "groupanagramsfast() (src.group_anagrams.solution method)": [[4, "src.group_anagrams.Solution.groupAnagramsFast"]], "groupanagramssorting() (src.group_anagrams.solution method)": [[4, "src.group_anagrams.Solution.groupAnagramsSorting"]], "src.group_anagrams": [[4, "module-src.group_anagrams"]], "solution (class in src.longest_cons_seq)": [[5, "src.longest_cons_seq.Solution"]], "longestconsecutive() (src.longest_cons_seq.solution method)": [[5, "src.longest_cons_seq.Solution.longestConsecutive"]], "src.longest_cons_seq": [[5, "module-src.longest_cons_seq"]], "solution (class in src.longest_rep_char_replacement)": [[6, "src.longest_rep_char_replacement.Solution"]], "characterreplacement() (src.longest_rep_char_replacement.solution method)": [[6, "src.longest_rep_char_replacement.Solution.characterReplacement"]], "src.longest_rep_char_replacement": [[6, "module-src.longest_rep_char_replacement"]], "solution (class in src.longest_subs_no_repeat)": [[7, "src.longest_subs_no_repeat.Solution"]], "lengthoflongestsubstring() (src.longest_subs_no_repeat.solution method)": [[7, "src.longest_subs_no_repeat.Solution.lengthOfLongestSubstring"]], "src.longest_subs_no_repeat": [[7, "module-src.longest_subs_no_repeat"]], "solution (class in src.min_rot_sort_array)": [[8, "src.min_rot_sort_array.Solution"]], "findmin() (src.min_rot_sort_array.solution method)": [[8, "src.min_rot_sort_array.Solution.findMin"]], "findminrecursive() (src.min_rot_sort_array.solution method)": [[8, "src.min_rot_sort_array.Solution.findMinRecursive"]], "src.min_rot_sort_array": [[8, "module-src.min_rot_sort_array"]], "solution (class in src.minimum_window_substring)": [[9, "src.minimum_window_substring.Solution"]], "minwindow() (src.minimum_window_substring.solution method)": [[9, "src.minimum_window_substring.Solution.minWindow"]], "src.minimum_window_substring": [[9, "module-src.minimum_window_substring"]], "solution (class in src.most_water_container)": [[10, "src.most_water_container.Solution"]], "maxarea() (src.most_water_container.solution method)": [[10, "src.most_water_container.Solution.maxArea"]], "maxareabruteforce() (src.most_water_container.solution method)": [[10, "src.most_water_container.Solution.maxAreaBruteForce"]], "src.most_water_container": [[10, "module-src.most_water_container"]], "solution (class in src.prod_arr_except_self)": [[11, "src.prod_arr_except_self.Solution"]], "productexceptself() (src.prod_arr_except_self.solution method)": [[11, "src.prod_arr_except_self.Solution.productExceptSelf"]], "src.prod_arr_except_self": [[11, "module-src.prod_arr_except_self"]], "solution (class in src.search_rot_sort_array)": [[12, "src.search_rot_sort_array.Solution"]], "search() (src.search_rot_sort_array.solution method)": [[12, "src.search_rot_sort_array.Solution.search"]], "src.search_rot_sort_array": [[12, "module-src.search_rot_sort_array"]], "solution (class in src.three_sum)": [[13, "src.three_sum.Solution"]], "src.three_sum": [[13, "module-src.three_sum"]], "threesum() (src.three_sum.solution method)": [[13, "src.three_sum.Solution.threeSum"]], "solution (class in src.top_k_frequent)": [[14, "src.top_k_frequent.Solution"]], "src.top_k_frequent": [[14, "module-src.top_k_frequent"]], "topkfrequent() (src.top_k_frequent.solution method)": [[14, "src.top_k_frequent.Solution.topKFrequent"]], "topkfrequentcompact() (src.top_k_frequent.solution method)": [[14, "src.top_k_frequent.Solution.topKFrequentCompact"]], "solution (class in src.two_sum)": [[15, "src.two_sum.Solution"]], "src.two_sum": [[15, "module-src.two_sum"]], "twosum() (src.two_sum.solution method)": [[15, "src.two_sum.Solution.twoSum"]], "solution (class in src.valid_anagram)": [[16, "src.valid_anagram.Solution"]], "isanagram() (src.valid_anagram.solution method)": [[16, "src.valid_anagram.Solution.isAnagram"]], "isanagramcounter() (src.valid_anagram.solution method)": [[16, "src.valid_anagram.Solution.isAnagramCounter"]], "isanagramsort() (src.valid_anagram.solution method)": [[16, "src.valid_anagram.Solution.isAnagramSort"]], "src.valid_anagram": [[16, "module-src.valid_anagram"]], "solution (class in src.valid_palindrome)": [[17, "src.valid_palindrome.Solution"]], "ispalindrome() (src.valid_palindrome.solution method)": [[17, "src.valid_palindrome.Solution.isPalindrome"]], "ispalindromecompact() (src.valid_palindrome.solution method)": [[17, "src.valid_palindrome.Solution.isPalindromeCompact"]], "ispalindromefunctional() (src.valid_palindrome.solution method)": [[17, "src.valid_palindrome.Solution.isPalindromeFunctional"]], "ispalindrometwopoint() (src.valid_palindrome.solution method)": [[17, "src.valid_palindrome.Solution.isPalindromeTwoPoint"]], "src.valid_palindrome": [[17, "module-src.valid_palindrome"]], "solution (class in src.valid_parenthesis)": [[18, "src.valid_parenthesis.Solution"]], "isvalid() (src.valid_parenthesis.solution method)": [[18, "src.valid_parenthesis.Solution.isValid"]], "src.valid_parenthesis": [[18, "module-src.valid_parenthesis"]]}})