Search.setIndex({"docnames": ["MATERIALS", "_autosummary/src", "_autosummary/src.best_buysell_stock", "_autosummary/src.contains_duplicate", "_autosummary/src.group_anagrams", "_autosummary/src.longest_cons_seq", "_autosummary/src.longest_rep_char_replacement", "_autosummary/src.longest_subs_no_repeat", "_autosummary/src.most_water_container", "_autosummary/src.prod_arr_except_self", "_autosummary/src.three_sum", "_autosummary/src.top_k_frequent", "_autosummary/src.two_sum", "_autosummary/src.valid_anagram", "_autosummary/src.valid_palindrome", "index"], "filenames": ["MATERIALS.md", "_autosummary/src.rst", "_autosummary/src.best_buysell_stock.rst", "_autosummary/src.contains_duplicate.rst", "_autosummary/src.group_anagrams.rst", "_autosummary/src.longest_cons_seq.rst", "_autosummary/src.longest_rep_char_replacement.rst", "_autosummary/src.longest_subs_no_repeat.rst", "_autosummary/src.most_water_container.rst", "_autosummary/src.prod_arr_except_self.rst", "_autosummary/src.three_sum.rst", "_autosummary/src.top_k_frequent.rst", "_autosummary/src.two_sum.rst", "_autosummary/src.valid_anagram.rst", "_autosummary/src.valid_palindrome.rst", "index.rst"], "titles": ["collected materials", "src", "src.best_buysell_stock", "src.contains_duplicate", "src.group_anagrams", "src.longest_cons_seq", "src.longest_rep_char_replacement", "src.longest_subs_no_repeat", "src.most_water_container", "src.prod_arr_except_self", "src.three_sum", "src.top_k_frequent", "src.two_sum", "src.valid_anagram", "src.valid_palindrome", "Technical interview prep materials"], "terms": {"page": [0, 15], "includ": 0, "inform": 0, "type": 0, "internship": 0, "you": [0, 11], "ar": [0, 7, 11, 13, 14], "like": [0, 11], "encount": 0, "some": [0, 4], "strategi": 0, "recommend": 0, "If": [0, 3, 4, 5, 7, 10, 14], "know": [0, 4, 7], "ani": 0, "other": [0, 2, 4], "good": [0, 14], "book": 0, "add": 0, "email": 0, "them": [0, 4, 13], "misc": 0, "reciev": 0, "proton": 0, "me": 0, "main": [0, 2], "websit": 0, "us": [0, 4, 5, 11, 13, 14], "compani": 0, "practic": [0, 4, 11], "hackerrank": 0, "interview": [0, 11, 14], "kit": 0, "should": 0, "especi": 0, "want": [0, 14], "do": [0, 4, 8, 9], "short": [0, 4], "term": 0, "leetcod": 0, "blind": 0, "75": 0, "seem": [0, 4], "common": [0, 14, 15], "track": [0, 5], "problem": [0, 4, 15], "peopl": 0, "follow": 0, "neetcod": 0, "ha": [0, 3, 5, 14], "codesign": 0, "also": [0, 14], "thi": [0, 2, 4, 8, 11, 14], "nice": 0, "simpl": 0, "ui": 0, "stuff": 0, "hack": 0, "box": 0, "jake": 0, "i": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14], "basic": [0, 4, 5, 7, 8, 10], "unbeat": 0, "qualiti": 0, "popul": 0, "right": [0, 5, 7, 10], "keyword": 0, "get": 0, "past": [0, 4], "most": 0, "screen": 0, "without": 0, "mani": 0, "modul": [1, 13], "class": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "solut": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "sourc": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "maxprofit": 2, "price": 2, "list": [2, 3, 4, 5, 8, 9, 10, 11, 12, 15], "int": [2, 3, 5, 7, 8, 9, 10, 11, 12], "The": [2, 8, 9], "idea": [2, 5, 10], "just": [2, 5, 8, 9, 10, 11, 14], "find": [2, 5], "maximum": [2, 8], "profit": 2, "we": [2, 4, 7, 8, 9, 10, 11, 12, 13, 14], "store": [2, 3, 4, 11, 12, 13], "lowest": 2, "compar": [2, 13, 14], "all": [2, 8, 9], "valu": [2, 4, 10, 11, 12], "time": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "complex": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "o": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "n": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "space": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "1": [2, 3, 4, 5, 8, 9, 10, 13, 14], "containsdupl": 3, "num": [3, 5, 9, 10, 11, 12], "bool": [3, 13, 14], "creat": [3, 4, 12, 13], "set": [3, 5], "uniqu": 3, "number": [3, 4, 11], "python": [3, 4, 14], "lookup": [3, 5], "alreadi": 3, "return": [3, 8, 11, 13, 14], "true": [3, 14], "groupanagram": 4, "str": [4, 7, 13, 14], "re": 4, "word": [4, 13], "frequenc": [4, 11, 13], "defaultdict": 4, "dict": 4, "init": [4, 10], "avoid": [4, 10, 14], "edg": 4, "case": [4, 10], "kei": [4, 7], "iter": [4, 12, 14], "through": [4, 12, 14], "count": 4, "each": [4, 11, 13], "charact": [4, 7, 13, 14], "convert": 4, "tupl": 4, "make": 4, "hashabl": 4, "potenti": 4, "unecessari": 4, "lang": 4, "ord": 4, "c": [4, 9], "map": [4, 7], "ascii": 4, "between": 4, "0": [4, 8, 10], "25": 4, "give": [4, 9], "u": [4, 9], "index": [4, 11, 12, 15], "increment": [4, 5], "m": 4, "where": [4, 11, 14], "averag": 4, "length": [4, 5, 8, 13], "interestingli": 4, "enough": 4, "actual": 4, "appear": 4, "slower": 4, "than": 4, "sort": [4, 10, 11, 13], "honestli": 4, "im": 4, "too": [4, 10, 14], "sure": 4, "why": 4, "One": 4, "reason": 4, "friend": 4, "mine": 4, "come": 4, "up": 4, "reduc": 4, "log": [4, 10, 11, 13], "though": [4, 11], "test": 4, "even": 4, "consider": 4, "larg": [4, 10], "faster": 4, "addition": 4, "hold": 4, "languag": [4, 14], "For": 4, "algorithm": 4, "3": [4, 10], "11": 4, "nearli": 4, "optim": 4, "mergesort": 4, "anyon": 4, "its": [4, 11], "seemingli": 4, "tell": 4, "groupanagramssort": 4, "similarli": 4, "anagram": 4, "can": [4, 8, 10, 11, 12, 13, 14], "group": 4, "togeth": 4, "dictionari": [4, 11, 12, 13], "groupanagramsfast": 4, "cach": 4, "creation": 4, "function": [4, 14], "recomput": 4, "rest": 4, "code": [4, 15], "same": [4, 14], "befor": 4, "longestconsecut": 5, "neighbor": 5, "logic": 5, "left": [5, 7], "start": [5, 7, 14], "sequenc": 5, "otherwis": 5, "keep": 5, "found": 5, "till": 5, "longest": 5, "max": 5, "recogn": [5, 12], "end": [5, 14], "lengthoflongestsubstr": 7, "": [7, 13, 14], "slide": 7, "window": 7, "concept": 7, "move": [7, 8, 10, 14], "l": [7, 8, 10], "notic": 7, "repeat": [7, 8], "letter": 7, "r": [7, 8, 10], "until": [7, 8], "condit": 7, "longer": 7, "violat": 7, "stationari": 7, "mark": 7, "our": [7, 10], "substr": 7, "grow": 7, "from": [7, 13], "side": 7, "two": [7, 8, 9, 10, 13, 14], "thing": [7, 14], "here": [7, 14], "approach": [7, 14], "pointer": [7, 8, 10, 14], "across": 7, "arrai": [7, 9, 10, 14], "becaus": 7, "sub": 7, "hashset": 7, "maxarea": 8, "height": 8, "onc": 8, "again": 8, "point": 8, "setup": [8, 10], "so": [8, 10], "len": 8, "while": [8, 10], "area": 8, "base": 8, "smaller": 8, "wall": 8, "text": 8, "min": 8, "h": 8, "sinc": [8, 10, 12], "larger": 8, "onli": [8, 12], "decreas": [8, 10], "cross": [8, 10], "over": [8, 10], "singl": 8, "loop": [8, 10], "maxareabruteforc": 8, "brute": 8, "forc": 8, "check": [8, 10, 14], "possibl": 8, "have": [8, 11, 13, 14], "combin": 8, "2": [8, 10, 13], "doe": 8, "pass": [8, 9], "limit": 8, "productexceptself": 9, "calcul": 9, "pre": 9, "post": 9, "product": 9, "given": 9, "an": [9, 11, 12, 14], "b": [9, 12], "d": 9, "first": 9, "comput": [9, 12], "ab": 9, "abc": 9, "second": 9, "bcd": 9, "cd": 9, "result": [9, 10], "answer": 9, "Its": 9, "cumul": 9, "forward": 9, "backward": 9, "threesum": 10, "broad": 10, "take": 10, "consid": 10, "closer": 10, "sum": 10, "increas": 10, "skip": 10, "posit": 10, "integ": 10, "imposs": 10, "e": 10, "g": 10, "duplic": 10, "thei": [10, 13], "havent": 10, "being": 10, "small": 10, "append": 10, "depend": 10, "implement": 10, "topkfrequ": 11, "k": 11, "place": 11, "element": [11, 12], "bucket": 11, "n1": 11, "n2": 11, "last": 11, "2n": 11, "topkfrequentcompact": 11, "feel": 11, "could": 11, "speak": 11, "close": 11, "would": 11, "probabl": 11, "expand": 11, "either": 11, "kind": 11, "explain": 11, "twosum": 12, "target": 12, "properti": 12, "idx": 12, "now": 12, "need": 12, "current": 12, "simpli": 12, "differ": [12, 13], "see": [12, 13, 15], "isanagram": 13, "t": 13, "trivial": 13, "fals": [13, 14], "equal": 13, "isanagramsort": 13, "isanagramcount": 13, "A": 13, "bit": 13, "cheat": 13, "counter": 13, "collect": [13, 15], "ispalindrom": 14, "Not": 14, "much": 14, "think": 14, "about": 14, "remmber": 14, "built": 14, "lib": 14, "alot": 14, "gener": [14, 15], "member": 14, "rememb": 14, "string": 14, "slice": 14, "notat": 14, "stop": 14, "step": 14, "wai": 14, "revers": 14, "ask": 14, "oa": 14, "constraint": 14, "fine": 14, "ispalindromecompact": 14, "rejex": 14, "along": 14, "lower": 14, "za": 14, "z0": 14, "9": 14, "remov": 14, "everyth": 14, "non": 14, "alphanumer": 14, "comparison": 14, "ispalindromefunct": 14, "essenti": 14, "more": 14, "origin": 14, "filter": 14, "out": [14, 15], "Then": 14, "ispalindrometwopoint": 14, "extra": 14, "lambda": 14, "reach": 14, "guid": 15, "applic": 15, "info": 15, "textbook": 15, "resum": 15, "templat": 15, "search": 15, "To": 15, "work": 15, "src": 15}, "objects": {"": [[1, 0, 0, "-", "src"]], "src": [[2, 0, 0, "-", "best_buysell_stock"], [3, 0, 0, "-", "contains_duplicate"], [4, 0, 0, "-", "group_anagrams"], [5, 0, 0, "-", "longest_cons_seq"], [6, 0, 0, "-", "longest_rep_char_replacement"], [7, 0, 0, "-", "longest_subs_no_repeat"], [8, 0, 0, "-", "most_water_container"], [9, 0, 0, "-", "prod_arr_except_self"], [10, 0, 0, "-", "three_sum"], [11, 0, 0, "-", "top_k_frequent"], [12, 0, 0, "-", "two_sum"], [13, 0, 0, "-", "valid_anagram"], [14, 0, 0, "-", "valid_palindrome"]], "src.best_buysell_stock": [[2, 1, 1, "", "Solution"]], "src.best_buysell_stock.Solution": [[2, 2, 1, "", "maxProfit"]], "src.contains_duplicate": [[3, 1, 1, "", "Solution"]], "src.contains_duplicate.Solution": [[3, 2, 1, "", "containsDuplicate"]], "src.group_anagrams": [[4, 1, 1, "", "Solution"]], "src.group_anagrams.Solution": [[4, 2, 1, "", "groupAnagrams"], [4, 2, 1, "", "groupAnagramsFast"], [4, 2, 1, "", "groupAnagramsSorting"]], "src.longest_cons_seq": [[5, 1, 1, "", "Solution"]], "src.longest_cons_seq.Solution": [[5, 2, 1, "", "longestConsecutive"]], "src.longest_subs_no_repeat": [[7, 1, 1, "", "Solution"]], "src.longest_subs_no_repeat.Solution": [[7, 2, 1, "", "lengthOfLongestSubstring"]], "src.most_water_container": [[8, 1, 1, "", "Solution"]], "src.most_water_container.Solution": [[8, 2, 1, "", "maxArea"], [8, 2, 1, "", "maxAreaBruteForce"]], "src.prod_arr_except_self": [[9, 1, 1, "", "Solution"]], "src.prod_arr_except_self.Solution": [[9, 2, 1, "", "productExceptSelf"]], "src.three_sum": [[10, 1, 1, "", "Solution"]], "src.three_sum.Solution": [[10, 2, 1, "", "threeSum"]], "src.top_k_frequent": [[11, 1, 1, "", "Solution"]], "src.top_k_frequent.Solution": [[11, 2, 1, "", "topKFrequent"], [11, 2, 1, "", "topKFrequentCompact"]], "src.two_sum": [[12, 1, 1, "", "Solution"]], "src.two_sum.Solution": [[12, 2, 1, "", "twoSum"]], "src.valid_anagram": [[13, 1, 1, "", "Solution"]], "src.valid_anagram.Solution": [[13, 2, 1, "", "isAnagram"], [13, 2, 1, "", "isAnagramCounter"], [13, 2, 1, "", "isAnagramSort"]], "src.valid_palindrome": [[14, 1, 1, "", "Solution"]], "src.valid_palindrome.Solution": [[14, 2, 1, "", "isPalindrome"], [14, 2, 1, "", "isPalindromeCompact"], [14, 2, 1, "", "isPalindromeFunctional"], [14, 2, 1, "", "isPalindromeTwoPoint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"collect": 0, "materi": [0, 15], "gener": 0, "guid": 0, "applic": 0, "info": 0, "textbook": 0, "code": 0, "prep": [0, 15], "softwar": 0, "engin": 0, "sec": 0, "resum": 0, "templat": 0, "src": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "best_buysell_stock": 2, "thought": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "process": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "note": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "contains_dupl": 3, "group_anagram": 4, "longest_cons_seq": 5, "longest_rep_char_replac": 6, "longest_subs_no_repeat": 7, "most_water_contain": 8, "prod_arr_except_self": 9, "three_sum": 10, "top_k_frequ": 11, "two_sum": 12, "valid_anagram": 13, "valid_palindrom": 14, "technic": 15, "interview": 15, "content": 15, "indic": 15, "tabl": 15, "modul": 15}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"collected materials": [[0, "collected-materials"]], "general guide and application info": [[0, "general-guide-and-application-info"]], "textbooks": [[0, "textbooks"]], "coding-prep": [[0, "coding-prep"]], "software-engineering": [[0, "software-engineering"]], "sec": [[0, "sec"]], "resume template": [[0, "resume-template"]], "src": [[1, "module-src"]], "src.best_buysell_stock": [[2, "module-src.best_buysell_stock"]], "Thought process": [[2, "thought-process"], [3, "thought-process"], [4, "thought-process"], [4, "id1"], [4, "id3"], [5, "thought-process"], [7, "thought-process"], [8, "thought-process"], [8, "id1"], [9, "thought-process"], [10, "thought-process"], [11, "thought-process"], [11, "id1"], [12, "thought-process"], [13, "thought-process"], [13, "id1"], [14, "thought-process"], [14, "id1"], [14, "id2"], [14, "id3"]], "Notes": [[2, "notes"], [3, "notes"], [4, "notes"], [4, "id2"], [5, "notes"], [7, "notes"], [8, "notes"], [8, "id2"], [9, "notes"], [10, "notes"], [11, "notes"], [11, "id2"], [12, "notes"], [13, "notes"], [13, "id2"], [14, "notes"], [14, "id4"]], "src.contains_duplicate": [[3, "module-src.contains_duplicate"]], "src.group_anagrams": [[4, "module-src.group_anagrams"]], "src.longest_cons_seq": [[5, "module-src.longest_cons_seq"]], "src.longest_rep_char_replacement": [[6, "module-src.longest_rep_char_replacement"]], "src.longest_subs_no_repeat": [[7, "module-src.longest_subs_no_repeat"]], "src.most_water_container": [[8, "module-src.most_water_container"]], "src.prod_arr_except_self": [[9, "module-src.prod_arr_except_self"]], "src.three_sum": [[10, "module-src.three_sum"]], "src.top_k_frequent": [[11, "module-src.top_k_frequent"]], "src.two_sum": [[12, "module-src.two_sum"]], "src.valid_anagram": [[13, "module-src.valid_anagram"]], "src.valid_palindrome": [[14, "module-src.valid_palindrome"]], "Technical interview prep materials": [[15, "technical-interview-prep-materials"]], "Contents": [[15, null]], "Indices and tables": [[15, "indices-and-tables"]], "Modules": [[15, "modules"]]}, "indexentries": {"module": [[1, "module-src"], [2, "module-src.best_buysell_stock"], [3, "module-src.contains_duplicate"], [4, "module-src.group_anagrams"], [5, "module-src.longest_cons_seq"], [6, "module-src.longest_rep_char_replacement"], [7, "module-src.longest_subs_no_repeat"], [8, "module-src.most_water_container"], [9, "module-src.prod_arr_except_self"], [10, "module-src.three_sum"], [11, "module-src.top_k_frequent"], [12, "module-src.two_sum"], [13, "module-src.valid_anagram"], [14, "module-src.valid_palindrome"]], "src": [[1, "module-src"]], "solution (class in src.best_buysell_stock)": [[2, "src.best_buysell_stock.Solution"]], "maxprofit() (src.best_buysell_stock.solution method)": [[2, "src.best_buysell_stock.Solution.maxProfit"]], "src.best_buysell_stock": [[2, "module-src.best_buysell_stock"]], "solution (class in src.contains_duplicate)": [[3, "src.contains_duplicate.Solution"]], "containsduplicate() (src.contains_duplicate.solution method)": [[3, "src.contains_duplicate.Solution.containsDuplicate"]], "src.contains_duplicate": [[3, "module-src.contains_duplicate"]], "solution (class in src.group_anagrams)": [[4, "src.group_anagrams.Solution"]], "groupanagrams() (src.group_anagrams.solution method)": [[4, "src.group_anagrams.Solution.groupAnagrams"]], "groupanagramsfast() (src.group_anagrams.solution method)": [[4, "src.group_anagrams.Solution.groupAnagramsFast"]], "groupanagramssorting() (src.group_anagrams.solution method)": [[4, "src.group_anagrams.Solution.groupAnagramsSorting"]], "src.group_anagrams": [[4, "module-src.group_anagrams"]], "solution (class in src.longest_cons_seq)": [[5, "src.longest_cons_seq.Solution"]], "longestconsecutive() (src.longest_cons_seq.solution method)": [[5, "src.longest_cons_seq.Solution.longestConsecutive"]], "src.longest_cons_seq": [[5, "module-src.longest_cons_seq"]], "src.longest_rep_char_replacement": [[6, "module-src.longest_rep_char_replacement"]], "solution (class in src.longest_subs_no_repeat)": [[7, "src.longest_subs_no_repeat.Solution"]], "lengthoflongestsubstring() (src.longest_subs_no_repeat.solution method)": [[7, "src.longest_subs_no_repeat.Solution.lengthOfLongestSubstring"]], "src.longest_subs_no_repeat": [[7, "module-src.longest_subs_no_repeat"]], "solution (class in src.most_water_container)": [[8, "src.most_water_container.Solution"]], "maxarea() (src.most_water_container.solution method)": [[8, "src.most_water_container.Solution.maxArea"]], "maxareabruteforce() (src.most_water_container.solution method)": [[8, "src.most_water_container.Solution.maxAreaBruteForce"]], "src.most_water_container": [[8, "module-src.most_water_container"]], "solution (class in src.prod_arr_except_self)": [[9, "src.prod_arr_except_self.Solution"]], "productexceptself() (src.prod_arr_except_self.solution method)": [[9, "src.prod_arr_except_self.Solution.productExceptSelf"]], "src.prod_arr_except_self": [[9, "module-src.prod_arr_except_self"]], "solution (class in src.three_sum)": [[10, "src.three_sum.Solution"]], "src.three_sum": [[10, "module-src.three_sum"]], "threesum() (src.three_sum.solution method)": [[10, "src.three_sum.Solution.threeSum"]], "solution (class in src.top_k_frequent)": [[11, "src.top_k_frequent.Solution"]], "src.top_k_frequent": [[11, "module-src.top_k_frequent"]], "topkfrequent() (src.top_k_frequent.solution method)": [[11, "src.top_k_frequent.Solution.topKFrequent"]], "topkfrequentcompact() (src.top_k_frequent.solution method)": [[11, "src.top_k_frequent.Solution.topKFrequentCompact"]], "solution (class in src.two_sum)": [[12, "src.two_sum.Solution"]], "src.two_sum": [[12, "module-src.two_sum"]], "twosum() (src.two_sum.solution method)": [[12, "src.two_sum.Solution.twoSum"]], "solution (class in src.valid_anagram)": [[13, "src.valid_anagram.Solution"]], "isanagram() (src.valid_anagram.solution method)": [[13, "src.valid_anagram.Solution.isAnagram"]], "isanagramcounter() (src.valid_anagram.solution method)": [[13, "src.valid_anagram.Solution.isAnagramCounter"]], "isanagramsort() (src.valid_anagram.solution method)": [[13, "src.valid_anagram.Solution.isAnagramSort"]], "src.valid_anagram": [[13, "module-src.valid_anagram"]], "solution (class in src.valid_palindrome)": [[14, "src.valid_palindrome.Solution"]], "ispalindrome() (src.valid_palindrome.solution method)": [[14, "src.valid_palindrome.Solution.isPalindrome"]], "ispalindromecompact() (src.valid_palindrome.solution method)": [[14, "src.valid_palindrome.Solution.isPalindromeCompact"]], "ispalindromefunctional() (src.valid_palindrome.solution method)": [[14, "src.valid_palindrome.Solution.isPalindromeFunctional"]], "ispalindrometwopoint() (src.valid_palindrome.solution method)": [[14, "src.valid_palindrome.Solution.isPalindromeTwoPoint"]], "src.valid_palindrome": [[14, "module-src.valid_palindrome"]]}})